import numpy as np


pSensor_imu = 1e-2 * np.array([
    [4.9, -4.9, 0],
    [-4.9, -4.9, 0],
    [4.9, 4.9, 0],
    [-4.9, 4.9, 0],
])

pSensor_imu_median = 1e-2 * np.array([
    [4, -4, 0],
    [-4, -4, 0],
    [4, 4, 0],
    [-4, 4, 0],
])
# 4 sensors
pSensor4 = 1e-2 * np.array([
    [4.89, 4.89, 0],
    [4.89, -4.89, 0],
    [-4.89, 4.89, 0],
    [-4.89, -4.89, 0],
])

# 5 sensors
pSensor5 = 1e-2 * np.array([
    [4.89, 4.89, 0],
    [4.89, -4.89, 0],
    [-4.89, 4.89, 0],
    [-4.89, -4.89, 0],
    [0, 0, 0],
])

# 6 sensors
pSensor6 = 1e-2 * np.array([
    [4.89, 4.89, 0],
    [4.89, 0, 0],
    [4.89, -4.89, 0],
    [-4.89, 4.89, 0],
    [-4.89, 0, 0],
    [-4.89, -4.89, 0],
])

# 7 sensors
pSensor7 = 1e-2 * np.array([
    [4.89, 4.89, 0],
    [4.89, 0, 0],
    [4.89, -4.89, 0],
    [-4.89, 4.89, 0],
    [-4.89, 0, 0],
    [-4.89, -4.89, 0],
    [0, 0, 0],
])

# 8 sensors
pSensor8 = 1e-2 * np.array([
    [8.350, 1.871, 2.714],
    [8.350, 0, 0],
    [8.350, -2.739, 2.249],
    [8.350, -1.194, 8.267],
    [-8.350, 1.871, 2.714],
    [-8.350, 0, 0],
    [-8.350, -2.739, 2.249],
    [-8.350, -1.194, 8.267],
])

# 9 sensors
pSensor9 = 1e-2 * np.array([
    [4.89, 4.89, 0],
    [4.89, 0, 0],
    [4.89, -4.89, 0],
    [0, 4.89, 0],
    [0, 0, 0],
    [0, -4.89, 0],
    [-4.89, 4.89, 0],
    [-4.89, 0, 0],
    [-4.89, -4.89, 0],
])

# cube layout
pSensor_large_cube = 1e-2 * np.array([
    [4.89, 4.89, -4.9],
    [4.89, -4.89, -4.9],
    [-4.89, 4.89, -4.9],
    [-4.89, -4.89, -4.9],
    [4.89, 4.89, 4.9],
    [4.89, -4.89, 4.9],
    [-4.89, 4.89, 4.9],
    [-4.89, -4.89, 4.9],
])

pSensor_flat_cube = 1e-2 * np.array([
    [4.89, 4.89, -1.6],
    [4.89, -4.89, -1.6],
    [-4.89, 4.89, -1.6],
    [-4.89, -4.89, -1.6],
    [4.89, 4.89, 1.6],
    [4.89, -4.89, 1.6],
    [-4.89, 4.89, 1.6],
    [-4.89, -4.89, 1.6],
])

pSensor_smt = 1e-2 * np.array([
    [4.9, -4.9, -1.63],
    [-4.9, -4.9, -1.63],
    [4.9, 4.9, -1.63],
    [-4.9, 4.9, -1.63],
    [4.9, -4.9, 1.63],
    [-4.9, -4.9, 1.63],
    [4.9, 4.9, 1.63],
    [-4.9, 4.9, 1.63],
])

pSensor_large_smt = 1e-2 * np.array([
    [8.350, 2.8024, 5.7614],
    [8.350, 0.5418, 8.3268],
    [8.350, 0, 0],
    [8.350, -2.0236, 5.7614],
    [-8.350, -2.0236, 5.7614],
    [-8.350, 0.5418, 8.3268],
    [-8.350, 2.8024, 5.7614],
    [-8.350, 0, 0],
])

pSensor_selfcare = 1e-2 * np.array([
    [7.3918,-7.5569,0],#5
    [2.3918,-7.5569,0],#3
    [-2.6082,-7.5569,0],#30
    [-7.6082,-7.5569,0],#31
    [7.3918,-2.5569,0],#7
    [2.3918,-2.5569,0], #4
    [-2.6082,-2.5569,0],#28
    [-7.6082,-2.5569,0],#29
    [7.3918,2.4431,0],#11
    [2.3918,2.5569,0],#9
    [-2.6082,2.5569,0],#2
    [-7.6082,2.5569,0],#27
    [7.3918,7.4431,0],#15
    [2.3918,7.5569,0],#16
    [-2.6082,7.5569,0],#25
    [-7.6082,7.5569,0],#26
    
])


pSensor_median_smt = 1e-2 * np.array([
    [4, -4, -1.63],
    [-4, -4, -1.63],
    [4, 4, -1.63],
    [-4, 4, -1.63],
    [0, -4, 1.63],
    [-4, 0, 1.63],
    [4, 0, 1.63],
    [0, 4, 1.63],
])

# pSensor_small_smt = 1e-2 * np.array([
#     [3, -3, -1.63],
#     [-3, -3, -1.63],
    
#     [-3, 3, -1.63],
#     [3, 3, -1.63],
#     [3, -3, 1.63],
#     [-3, 3, 1.63],
#     [3, -3, 1.63],
#     [-3, -3, 1.63],
# ])

pSensor_small_smt = 1e-2 * np.array([
    [3, -3, -1.63],
    [-3, -3, -1.63],
    
    [-3, 3, -1.63],
    [3, 3, -1.63],
    [3, 0, 1.63],
    [0, -3, 1.63],
    [-3, 0, 1.63],
    
    [0, 3, 1.63],
])


pSensor_ear_smt = 1e-2 * np.array([
    # [7.96,-2.2606 ,0      ],
    # [7.96, 0      ,2.5527 ],
    # [7.96,0.546   ,-5.75  ],
    # [7.96,2.5527  ,0.978  ],
    # [7.96,2.5527  ,-0.6985],)
    # [7.96,2.5527  ,-4.5212],
    # # [-7.96,-2.2606,0      ],
    # # [-7.96, 0     ,2.5527 ],
    # [-7.96,0.546  ,-5.75  ],
    # # [-7.96,2.5527 ,0.978  ],
    # [-7.96,2.5527 ,-0.6985],
    # [-7.96,2.5527 ,-4.5212],

    #hy cinfig
    
    # [2.2606,  0,      8],
    # [0,   -2.5527,    8],
    # [-2.5527, -0.9779,      8],
    # [-0.5461,5.7531,   8],
    # [-2.5527, 4.5212,      8],
    # [-2.5527,0.6985,   8],
    # [2.2606,  0,      -8],
    # [0,   -2.5527,    -8],
    # [-2.5527, -0.9779,      -8],
    # [-0.5461,5.7531,   -8],
    # [-2.5527, 4.5212,      -8],
    # [-2.5527,0.6985,   -8],


    # [2.2606,  0,      -7],
    # [0,   -2.5527,    -7],
    # [-2.5527, -0.9779,      -7],
    # [-0.5461,5.7531,   -7],
    # [-2.5527, 4.5212,      -7],
    # [-2.5527,0.6985,   -7],
    # [2.2606,  0,      7],
    # [0,   -2.5527,    7],
    # [-2.5527, -0.9779,      7],
    # [-0.5461,5.7531,   7],
    # [-2.5527, 4.5212,      7],
    # [-2.5527,0.6985,   7],

    #czy config
    [1.2192, 5.08, -7],
    [2.7432, 5.08, -7],
    [1.2192,3.556, -7],
    [4.2672, 5.08, -7],
    [4.2672, 3.556, -7],
    [2.7432, 3.556, -7],
    [1.2192, 5.08, 7],
    [2.7432, 5.08, 7],
    [1.2192,3.556, 7],
    [4.2672, 5.08, 7],
    [4.2672, 3.556, 7],
    [2.7432, 3.556, 7],



    #   [-10.922, -2.54, -8],
    #   [-8.382, -2.54, -8],
    #   [-10.922,-5.08, -8],
    #   [-5.842, -2.54, -8],
    #   [-5.842, -5.08, -8],
    #   [-8.382, -5.08, -8],
    #   [-10.922, -2.54, 8],
    #   [-8.382, -2.54, 8],
    #   [-10.922,-5.08, 8],
    #   [-5.842, -2.54, 8],
    #   [-5.842, -5.08, 8],
    #   [-8.382, -5.08, 8],



    #   [-2.0573, 0.0762, -8],
    #   [-2.0611, -1.599, -8],
    #   [0.1398,3.0099, -8],
    #   [1.6638, 3.0099, -8],
    #   [4.7118, 3.0099, -8],
    #   [3.1878,3.0099, -8],
    #   [-2.0573, 0.0762, 8],
    #   [-2.0611, -1.599, 8],
    #   [0.1398,3.0099, 8],
    #   [1.6638, 3.0099, 8],
    #   [4.7118, 3.0099, 8],
    #   [3.1878,3.0099, 8],




    # [-2.54,  2.794,      -8],
    # [-2.54379984,   4.3168112,    -8],
    # [-0.3556, 5.715,      -8],
    # [1.1684,5.715,   -8],
    # [4.2164, 5.715,      -8],
    # [2.6924,5.715,   -8],
    # [-2.54,  2.794, 8],  
    # [-2.54379984,   4.3168112,       8],
    # [-0.3556, 5.715,       8],
    # [1.1684,5.715,    8],
    # [4.2164, 5.715,       8],
    # [2.6924,5.715,    8],


    #之前版本
    # [2.26314,  0,      8],
    # [0,   -2.56032,    8],
    # [-2.56032, 0,      8],
    # [-0.5461,5.7658,   8],
    # [0,   -2.56032,    -8],
    # [2.26314,  0,      -8],
    # [-2.56032, 0,      -8],
    # [-0.5461,5.7658,   -8],
])
#4,2, 3,5,7,11,15,16
psensor_magdot = 1e-2 * np.array([
[-0.6,-0.5,0],
[0.6,-0.5,0],
[0,-1,0],
[0.9,0,0],
[0.3,0,0],
[0,-0.5,0],
[-0.3,0,0],
[-0.9,0,0]

])

psensor_circular = 1e-2 * np.array([
[-0.6,0,0],
[0.6,0,0],
[0,-0.5,0],
[0.9,0.5,0],
[0.3,0.5,0],
[0,0,0],
[-0.3,0.5,0],
[-0.9,0.5,0]

])



# 4, 5, 7, 2, 11, 25, 15, 16, 3, 26
#5,25,7,4,2,15,11,16
pSensor_joint_exp = 1e-2 * np.array([
    

    [ 0.5, -0.5, 0],#5
    [-1, 0, 0],#25
    [-0.5, -0.5, 0],#7
    [0, -0.8, 0],#4

    [ 1, 0, 0],#2
    [ 0.5, 0.5, 0],#15
    [ 0, 0, 0],#11
    [-0.5, 0.5, 0],#16
    # [ 1, 1, 0],
    # [-1, 1, 0]
    
])
#     [0, -0.8, 0],

#     [ 0.5, -0.5, 0],
#     [-0.5, -0.5, 0],

#     [ 1, 0, 0],
#     [ 0, 0, 0],
#     [-1, 0, 0],

#     [ 0.5, 0.5, 0],
#     [-0.5, 0.5, 0],

#     [ 1, 1, 0],
#     [-1, 1, 0]
# ])
    #[1.1331,  0.76,      8.16],
    #[-1.13,   -1.8003,    8.16],
    #[-3.9603, 0.76,      8.16],
    #[-1.67356,6.5204,   8.16],
    #[-1.13,   -1.8003, -8],  
    #[1.1331,  0.76,       -8],
    #[-3.9603, 0.76,       -8],
    #[-1.67356,6.5204,    -8],
    # [10.25,-2.2631,0],
    # [10.25,0,2.5603],
    # [10.25,2.5603,0],
    # [10.25,0.54356,-5.7607],
    # [-10.25,2.5603,0],
    # [-10.25,0.54356,-5.7607],
    # [-10.25,-2.2631,0],
    # [-10.25,0,2.5603],
